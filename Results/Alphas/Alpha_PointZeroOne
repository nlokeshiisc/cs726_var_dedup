Alpha = 0.01
-----------------------
/content/drive/My Drive/ditto
2021-05-14 09:29:27.247245: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcudart.so.11.0
Selected optimization level O2:  FP16 training with FP32 batchnorm and FP32 master weights.

Defaults for this optimization level are:
enabled                : True
opt_level              : O2
cast_model_type        : torch.float16
patch_torch_functions  : False
keep_batchnorm_fp32    : True
master_weights         : True
loss_scale             : dynamic
Processing user overrides (additional kwargs that are not None)...
After processing overrides, optimization options are:
enabled                : True
opt_level              : O2
cast_model_type        : torch.float16
patch_torch_functions  : False
keep_batchnorm_fp32    : True
master_weights         : True
loss_scale             : dynamic
Warning:  multi_tensor_applier fused unscale kernel is unavailable, possibly because apex was installed without --cuda_ext --cpp_ext. Using Python fallback.  Original ImportError was: ModuleNotFoundError("No module named 'amp_C'")
/usr/local/lib/python3.7/dist-packages/apex/amp/_initialize.py:25: UserWarning: An input tensor was not cuda.
  warnings.warn("An input tensor was not cuda.")
=====sanity check======
words: COL title VAL netgear ant 9dbi in outdoor omni-direc COL category VAL computers COL brand VAL netgear COL modelno VAL ant240920000s COL price VAL 129.82  [SEP] COL title VAL ant 9dbi in outdoor omni-direc COL category VAL connectors adapters COL brand VAL netgear COL modelno VAL  COL price VAL  
x: [  101  8902  2516 11748  5658  3351  2906 14405  1023 18939  2072  1999
  7254 18168  3490  1011 18704  2278  8902  4696 11748  7588  8902  4435
 11748  5658  3351  2906  8902  2944  3630 11748 14405 18827  2692  2683
 28332  8889  2015  8902  3976 11748 14378  1012  6445   102  8902  2516
 11748 14405  1023 18939  2072  1999  7254 18168  3490  1011 18704  2278
  8902  4696 11748 19400  2015 15581  2545  8902  4435 11748  5658  3351
  2906  8902  2944  3630 11748  8902  3976 11748   102]
tokens: ['[CLS]', 'col', 'title', 'val', 'net', '##ge', '##ar', 'ant', '9', '##db', '##i', 'in', 'outdoor', 'om', '##ni', '-', 'dire', '##c', 'col', 'category', 'val', 'computers', 'col', 'brand', 'val', 'net', '##ge', '##ar', 'col', 'model', '##no', 'val', 'ant', '##24', '##0', '##9', '##200', '##00', '##s', 'col', 'price', 'val', '129', '.', '82', '[SEP]', 'col', 'title', 'val', 'ant', '9', '##db', '##i', 'in', 'outdoor', 'om', '##ni', '-', 'dire', '##c', 'col', 'category', 'val', 'connector', '##s', 'adapt', '##ers', 'col', 'brand', 'val', 'net', '##ge', '##ar', 'col', 'model', '##no', 'val', 'col', 'price', 'val', '[SEP]']
is_heads: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
y: 1
tags: 1
mask: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1])
seqlen: 81
task_name: Structured/Walmart-Amazon
=======================
step: 0, task: Structured/Walmart-Amazon, loss: 0.7067992687225342
Gradient overflow.  Skipping step, loss scaler 0 reducing loss scale to 32768.0
step: 10, task: Structured/Walmart-Amazon, loss: 0.7105530500411987
step: 20, task: Structured/Walmart-Amazon, loss: 0.7181447744369507
step: 30, task: Structured/Walmart-Amazon, loss: 0.6762768626213074
step: 40, task: Structured/Walmart-Amazon, loss: 0.6953574419021606
step: 50, task: Structured/Walmart-Amazon, loss: 0.6936535239219666
step: 60, task: Structured/Walmart-Amazon, loss: 0.7271998524665833
step: 70, task: Structured/Walmart-Amazon, loss: 0.6720862984657288
=========eval at epoch=1=========
Validation:
=============Structured/Walmart-Amazon==================
accuracy=0.452
precision=0.129
recall=0.839
f1=0.224
======================================
Test:
=============Structured/Walmart-Amazon==================
accuracy=0.443
precision=0.129
recall=0.850
f1=0.223
======================================
=====sanity check======
words: COL title VAL middle atlantic designer inspired ultra quiet fan panel COL category VAL tv accessories COL brand VAL middle atlantic COL modelno VAL uqfp-4dra COL price VAL 525.0  [SEP] COL title VAL middle atlantic designer inspired ultra quiet fan panel uqfp-4dra - rack fan kit - black COL category VAL home audio theater COL brand VAL middle atlantic COL modelno VAL uqfp-4dra COL price VAL 372.42 
x: [  101  8902  2516 11748  2690  4448  5859  4427 11087  4251  5470  5997
  8902  4696 11748  2694 16611  8902  4435 11748  2690  4448  8902  2944
  3630 11748  1057  4160 22540  1011  1018  7265  8902  3976 11748 25621
  1012  1014   102  8902  2516 11748  2690  4448  5859  4427 11087  4251
  5470  5997  1057  4160 22540  1011  1018  7265  1011 14513  5470  8934
  1011  2304  8902  4696 11748  2188  5746  4258  8902  4435 11748  2690
  4448  8902  2944  3630 11748  1057  4160 22540  1011  1018  7265  8902
  3976 11748  4261  2475  1012  4413   102]
tokens: ['[CLS]', 'col', 'title', 'val', 'middle', 'atlantic', 'designer', 'inspired', 'ultra', 'quiet', 'fan', 'panel', 'col', 'category', 'val', 'tv', 'accessories', 'col', 'brand', 'val', 'middle', 'atlantic', 'col', 'model', '##no', 'val', 'u', '##q', '##fp', '-', '4', '##dra', 'col', 'price', 'val', '525', '.', '0', '[SEP]', 'col', 'title', 'val', 'middle', 'atlantic', 'designer', 'inspired', 'ultra', 'quiet', 'fan', 'panel', 'u', '##q', '##fp', '-', '4', '##dra', '-', 'rack', 'fan', 'kit', '-', 'black', 'col', 'category', 'val', 'home', 'audio', 'theater', 'col', 'brand', 'val', 'middle', 'atlantic', 'col', 'model', '##no', 'val', 'u', '##q', '##fp', '-', '4', '##dra', 'col', 'price', 'val', '37', '##2', '.', '42', '[SEP]']
is_heads: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
y: 1
tags: 1
mask: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
seqlen: 91
task_name: Structured/Walmart-Amazon
=======================
step: 0, task: Structured/Walmart-Amazon, loss: 0.699641227722168
step: 10, task: Structured/Walmart-Amazon, loss: 0.6069201231002808
step: 20, task: Structured/Walmart-Amazon, loss: 0.6436448097229004
step: 30, task: Structured/Walmart-Amazon, loss: 0.5635730028152466
step: 40, task: Structured/Walmart-Amazon, loss: 0.46528246998786926
step: 50, task: Structured/Walmart-Amazon, loss: 0.5676335692405701
step: 60, task: Structured/Walmart-Amazon, loss: 0.33146294951438904
step: 70, task: Structured/Walmart-Amazon, loss: 0.5526626706123352
=========eval at epoch=2=========
Validation:
=============Structured/Walmart-Amazon==================
accuracy=0.898
precision=0.473
recall=0.736
f1=0.576
======================================
Test:
=============Structured/Walmart-Amazon==================
accuracy=0.912
precision=0.525
recall=0.710
f1=0.604
======================================
=====sanity check======
words: COL title VAL sennheiser sh 230 monaural headset COL category VAL electronics - general COL brand VAL sennheiser COL modelno VAL sh230 COL price VAL 84.0  [SEP] COL title VAL new-sh230 monaural headset - sh230 COL category VAL accessories supplies COL brand VAL sennheiser COL modelno VAL  COL price VAL 89.32 
x: [  101  8902  2516 11748 12411 25311 17580  2121 14021 11816 13813 11137
  4641  3388  8902  4696 11748  8139  1011  2236  8902  4435 11748 12411
 25311 17580  2121  8902  2944  3630 11748 14021 21926  2692  8902  3976
 11748  6391  1012  1014   102  8902  2516 11748  2047  1011 14021 21926
  2692 13813 11137  4641  3388  1011 14021 21926  2692  8902  4696 11748
 16611  6067  8902  4435 11748 12411 25311 17580  2121  8902  2944  3630
 11748  8902  3976 11748  6486  1012  3590   102]
tokens: ['[CLS]', 'col', 'title', 'val', 'sen', '##nh', '##eis', '##er', 'sh', '230', 'mona', '##ural', 'heads', '##et', 'col', 'category', 'val', 'electronics', '-', 'general', 'col', 'brand', 'val', 'sen', '##nh', '##eis', '##er', 'col', 'model', '##no', 'val', 'sh', '##23', '##0', 'col', 'price', 'val', '84', '.', '0', '[SEP]', 'col', 'title', 'val', 'new', '-', 'sh', '##23', '##0', 'mona', '##ural', 'heads', '##et', '-', 'sh', '##23', '##0', 'col', 'category', 'val', 'accessories', 'supplies', 'col', 'brand', 'val', 'sen', '##nh', '##eis', '##er', 'col', 'model', '##no', 'val', 'col', 'price', 'val', '89', '.', '32', '[SEP]']
is_heads: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
y: 1
tags: 1
mask: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
seqlen: 80
task_name: Structured/Walmart-Amazon
=======================
step: 0, task: Structured/Walmart-Amazon, loss: 0.4244174361228943
step: 10, task: Structured/Walmart-Amazon, loss: 0.2785506248474121
step: 20, task: Structured/Walmart-Amazon, loss: 0.6103804707527161
step: 30, task: Structured/Walmart-Amazon, loss: 0.49679121375083923
step: 40, task: Structured/Walmart-Amazon, loss: 0.22410443425178528
step: 50, task: Structured/Walmart-Amazon, loss: 0.27312082052230835
step: 60, task: Structured/Walmart-Amazon, loss: 0.2577299177646637
step: 70, task: Structured/Walmart-Amazon, loss: 0.28385570645332336
=========eval at epoch=3=========
Validation:
=============Structured/Walmart-Amazon==================
accuracy=0.897
precision=0.473
recall=0.855
f1=0.609
======================================
Test:
=============Structured/Walmart-Amazon==================
accuracy=0.920
precision=0.547
recall=0.870
f1=0.672
======================================
=====sanity check======
words: COL title VAL da-lite matte white deluxe model b manual screen - 60 x 60 av format COL category VAL electronics - general COL brand VAL da-lite COL modelno VAL 40223 COL price VAL 118.99  [SEP] COL title VAL da-lite designer model b matte white - projection screen - mahogany COL category VAL video projector accessories COL brand VAL da-lite COL modelno VAL matte white COL price VAL  
x: [  101  8902  2516 11748  4830  1011  5507  2063  4717  2063  2317 15203
  2944  1038  6410  3898  1011  3438  1060  3438 20704  4289  8902  4696
 11748  8139  1011  2236  8902  4435 11748  4830  1011  5507  2063  8902
  2944  3630 11748 28048 21926  8902  3976 11748 12963  1012  5585   102
  8902  2516 11748  4830  1011  5507  2063  5859  2944  1038  4717  2063
  2317  1011 13996  3898  1011 23867  8902  4696 11748  2678  2622  2953
 16611  8902  4435 11748  4830  1011  5507  2063  8902  2944  3630 11748
  4717  2063  2317  8902  3976 11748   102]
tokens: ['[CLS]', 'col', 'title', 'val', 'da', '-', 'lit', '##e', 'matt', '##e', 'white', 'deluxe', 'model', 'b', 'manual', 'screen', '-', '60', 'x', '60', 'av', 'format', 'col', 'category', 'val', 'electronics', '-', 'general', 'col', 'brand', 'val', 'da', '-', 'lit', '##e', 'col', 'model', '##no', 'val', '402', '##23', 'col', 'price', 'val', '118', '.', '99', '[SEP]', 'col', 'title', 'val', 'da', '-', 'lit', '##e', 'designer', 'model', 'b', 'matt', '##e', 'white', '-', 'projection', 'screen', '-', 'mahogany', 'col', 'category', 'val', 'video', 'project', '##or', 'accessories', 'col', 'brand', 'val', 'da', '-', 'lit', '##e', 'col', 'model', '##no', 'val', 'matt', '##e', 'white', 'col', 'price', 'val', '[SEP]']
is_heads: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
y: 0
tags: 0
mask: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1])
seqlen: 91
task_name: Structured/Walmart-Amazon
=======================
step: 0, task: Structured/Walmart-Amazon, loss: 0.13621720671653748
step: 10, task: Structured/Walmart-Amazon, loss: 0.24942956864833832
step: 20, task: Structured/Walmart-Amazon, loss: 0.15515200793743134
step: 30, task: Structured/Walmart-Amazon, loss: 0.21566011011600494
Gradient overflow.  Skipping step, loss scaler 0 reducing loss scale to 16384.0
step: 40, task: Structured/Walmart-Amazon, loss: 0.139789417386055
step: 50, task: Structured/Walmart-Amazon, loss: 0.18253208696842194
step: 60, task: Structured/Walmart-Amazon, loss: 0.21531908214092255
step: 70, task: Structured/Walmart-Amazon, loss: 0.3900449573993683
=========eval at epoch=4=========
Validation:
=============Structured/Walmart-Amazon==================
accuracy=0.958
precision=0.873
recall=0.642
f1=0.740
======================================
Test:
=============Structured/Walmart-Amazon==================
accuracy=0.961
precision=0.906
recall=0.653
f1=0.759
======================================
=====sanity check======
words: COL title VAL sandisk 8gb cruzer usb flash drive pink COL category VAL usb drives COL brand VAL sandisk COL modelno VAL sdcz36z008gaw11p COL price VAL 12.88  [SEP] COL title VAL sandisk cruzer micro skin - usb flash drive - 2 gb - usb 2.0 COL category VAL usb flash drives COL brand VAL sandisk COL modelno VAL sdcz4-2048-e11 COL price VAL 8.95 
x: [  101  8902  2516 11748  5472 20573  1022 18259  8096  2121 18833  5956
  3298  5061  8902  4696 11748 18833  9297  8902  4435 11748  5472 20573
  8902  2944  3630 11748 17371 27966 21619  2480  8889  2620  3654  2860
 14526  2361  8902  3976 11748  2260  1012  6070   102  8902  2516 11748
  5472 20573  8096  2121 12702  3096  1011 18833  5956  3298  1011  1016
 16351  1011 18833  1016  1012  1014  8902  4696 11748 18833  5956  9297
  8902  4435 11748  5472 20573  8902  2944  3630 11748 17371 27966  2549
  1011 19627  2620  1011  1041 14526  8902  3976 11748  1022  1012  5345
   102]
tokens: ['[CLS]', 'col', 'title', 'val', 'sand', '##isk', '8', '##gb', 'cruz', '##er', 'usb', 'flash', 'drive', 'pink', 'col', 'category', 'val', 'usb', 'drives', 'col', 'brand', 'val', 'sand', '##isk', 'col', 'model', '##no', 'val', 'sd', '##cz', '##36', '##z', '##00', '##8', '##ga', '##w', '##11', '##p', 'col', 'price', 'val', '12', '.', '88', '[SEP]', 'col', 'title', 'val', 'sand', '##isk', 'cruz', '##er', 'micro', 'skin', '-', 'usb', 'flash', 'drive', '-', '2', 'gb', '-', 'usb', '2', '.', '0', 'col', 'category', 'val', 'usb', 'flash', 'drives', 'col', 'brand', 'val', 'sand', '##isk', 'col', 'model', '##no', 'val', 'sd', '##cz', '##4', '-', '204', '##8', '-', 'e', '##11', 'col', 'price', 'val', '8', '.', '95', '[SEP]']
is_heads: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
y: 0
tags: 0
mask: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
seqlen: 97
task_name: Structured/Walmart-Amazon
=======================
step: 0, task: Structured/Walmart-Amazon, loss: 0.11030369251966476
step: 10, task: Structured/Walmart-Amazon, loss: 0.11768088489770889
step: 20, task: Structured/Walmart-Amazon, loss: 0.38343995809555054
step: 30, task: Structured/Walmart-Amazon, loss: 0.20733286440372467
step: 40, task: Structured/Walmart-Amazon, loss: 0.11679167300462723
step: 50, task: Structured/Walmart-Amazon, loss: 0.15459299087524414
step: 60, task: Structured/Walmart-Amazon, loss: 0.6232120394706726
step: 70, task: Structured/Walmart-Amazon, loss: 0.9642260670661926
=========eval at epoch=5=========
Validation:
=============Structured/Walmart-Amazon==================
accuracy=0.954
precision=0.750
recall=0.762
f1=0.756
======================================
Test:
=============Structured/Walmart-Amazon==================
accuracy=0.956
precision=0.763
recall=0.767
f1=0.765
======================================
=====sanity check======
words: COL title VAL lexmark e450h11a toner 11000 page-yield black COL category VAL printers COL brand VAL lexmark COL modelno VAL e450h11a COL price VAL 248.27  [SEP] COL title VAL cltk409s toner 1500 page-yield black COL category VAL laser printer toner COL brand VAL samsung COL modelno VAL samsung clx 3175n , COL price VAL 49.92 
x: [  101  8902  2516 11748 17244 10665  1041 19961  2692  2232 14526  2050
  4309  2099 22096  2692  3931  1011 10750  2304  8902  4696 11748 23557
  8902  4435 11748 17244 10665  8902  2944  3630 11748  1041 19961  2692
  2232 14526  2050  8902  3976 11748 24568  1012  2676   102  8902  2516
 11748 18856  2102  2243 12740  2683  2015  4309  2099 10347  3931  1011
 10750  2304  8902  4696 11748  9138 15041  4309  2099  8902  4435 11748
 19102  8902  2944  3630 11748 19102 18856  2595 26628  2629  2078  1010
  8902  3976 11748  4749  1012  6227   102]
tokens: ['[CLS]', 'col', 'title', 'val', 'lex', '##mark', 'e', '##45', '##0', '##h', '##11', '##a', 'tone', '##r', '1100', '##0', 'page', '-', 'yield', 'black', 'col', 'category', 'val', 'printers', 'col', 'brand', 'val', 'lex', '##mark', 'col', 'model', '##no', 'val', 'e', '##45', '##0', '##h', '##11', '##a', 'col', 'price', 'val', '248', '.', '27', '[SEP]', 'col', 'title', 'val', 'cl', '##t', '##k', '##40', '##9', '##s', 'tone', '##r', '1500', 'page', '-', 'yield', 'black', 'col', 'category', 'val', 'laser', 'printer', 'tone', '##r', 'col', 'brand', 'val', 'samsung', 'col', 'model', '##no', 'val', 'samsung', 'cl', '##x', '317', '##5', '##n', ',', 'col', 'price', 'val', '49', '.', '92', '[SEP]']
is_heads: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
y: 0
tags: 0
mask: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
seqlen: 91
task_name: Structured/Walmart-Amazon
=======================
step: 0, task: Structured/Walmart-Amazon, loss: 0.1663164645433426
step: 10, task: Structured/Walmart-Amazon, loss: 0.140174999833107
step: 20, task: Structured/Walmart-Amazon, loss: 0.26977840065956116
step: 30, task: Structured/Walmart-Amazon, loss: 0.4142792820930481
step: 40, task: Structured/Walmart-Amazon, loss: 0.15237857401371002
step: 50, task: Structured/Walmart-Amazon, loss: 0.43849000334739685
step: 60, task: Structured/Walmart-Amazon, loss: 0.12702679634094238
step: 70, task: Structured/Walmart-Amazon, loss: 0.45882922410964966
=========eval at epoch=6=========
Validation:
=============Structured/Walmart-Amazon==================
accuracy=0.963
precision=0.817
recall=0.788
f1=0.802
======================================
Test:
=============Structured/Walmart-Amazon==================
accuracy=0.963
precision=0.820
recall=0.777
f1=0.798
======================================
=====sanity check======
words: COL title VAL gear head wireless optical tilt-wheel mouse red COL category VAL mice COL brand VAL gear head COL modelno VAL mpt3200red COL price VAL 19.88  [SEP] COL title VAL gear head 2.4 ghz wireless optical tilt-wheel nano mouse - red black om6500wt COL category VAL mice COL brand VAL gear head COL modelno VAL om6500wt COL price VAL 19.44 
x: [  101  8902  2516 11748  6718  2132  9949  9380 17010  1011  5217  8000
  2417  8902  4696 11748 12328  8902  4435 11748  6718  2132  8902  2944
  3630 11748  6131  2102 16703  8889  5596  8902  3976 11748  2539  1012
  6070   102  8902  2516 11748  6718  2132  1016  1012  1018 29066  9949
  9380 17010  1011  5217 28991  8000  1011  2417  2304 18168 26187  8889
 26677  8902  4696 11748 12328  8902  4435 11748  6718  2132  8902  2944
  3630 11748 18168 26187  8889 26677  8902  3976 11748  2539  1012  4008
   102]
tokens: ['[CLS]', 'col', 'title', 'val', 'gear', 'head', 'wireless', 'optical', 'tilt', '-', 'wheel', 'mouse', 'red', 'col', 'category', 'val', 'mice', 'col', 'brand', 'val', 'gear', 'head', 'col', 'model', '##no', 'val', 'mp', '##t', '##32', '##00', '##red', 'col', 'price', 'val', '19', '.', '88', '[SEP]', 'col', 'title', 'val', 'gear', 'head', '2', '.', '4', 'ghz', 'wireless', 'optical', 'tilt', '-', 'wheel', 'nano', 'mouse', '-', 'red', 'black', 'om', '##65', '##00', '##wt', 'col', 'category', 'val', 'mice', 'col', 'brand', 'val', 'gear', 'head', 'col', 'model', '##no', 'val', 'om', '##65', '##00', '##wt', 'col', 'price', 'val', '19', '.', '44', '[SEP]']
is_heads: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
y: 0
tags: 0
mask: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
seqlen: 85
task_name: Structured/Walmart-Amazon
=======================
step: 0, task: Structured/Walmart-Amazon, loss: 0.30375638604164124
step: 10, task: Structured/Walmart-Amazon, loss: 0.2976688742637634
step: 20, task: Structured/Walmart-Amazon, loss: 0.09755904227495193
step: 30, task: Structured/Walmart-Amazon, loss: 0.056126926094293594
step: 40, task: Structured/Walmart-Amazon, loss: 0.06568349152803421
step: 50, task: Structured/Walmart-Amazon, loss: 0.07174988836050034
step: 60, task: Structured/Walmart-Amazon, loss: 0.06339143961668015
step: 70, task: Structured/Walmart-Amazon, loss: 0.19744724035263062
=========eval at epoch=7=========
Validation:
=============Structured/Walmart-Amazon==================
accuracy=0.962
precision=0.780
recall=0.829
f1=0.804
======================================
Test:
=============Structured/Walmart-Amazon==================
accuracy=0.961
precision=0.800
recall=0.788
f1=0.794
======================================
=====sanity check======
words: COL title VAL i-tec ipad anti-glare screen protector COL category VAL mp3 accessories COL brand VAL i-tec electronics COL modelno VAL t6020 COL price VAL 17.88  [SEP] COL title VAL i-tec t6020 ipad r anti-glare screen protector COL category VAL printers COL brand VAL i-tec COL modelno VAL  COL price VAL  
x: [  101  8902  2516 11748  1045  1011  8915  2278 25249  3424  1011 10982
  3898 16167  8902  4696 11748 23378 16611  8902  4435 11748  1045  1011
  8915  2278  8139  8902  2944  3630 11748  1056 16086 11387  8902  3976
 11748  2459  1012  6070   102  8902  2516 11748  1045  1011  8915  2278
  1056 16086 11387 25249  1054  3424  1011 10982  3898 16167  8902  4696
 11748 23557  8902  4435 11748  1045  1011  8915  2278  8902  2944  3630
 11748  8902  3976 11748   102]
tokens: ['[CLS]', 'col', 'title', 'val', 'i', '-', 'te', '##c', 'ipad', 'anti', '-', 'glare', 'screen', 'protector', 'col', 'category', 'val', 'mp3', 'accessories', 'col', 'brand', 'val', 'i', '-', 'te', '##c', 'electronics', 'col', 'model', '##no', 'val', 't', '##60', '##20', 'col', 'price', 'val', '17', '.', '88', '[SEP]', 'col', 'title', 'val', 'i', '-', 'te', '##c', 't', '##60', '##20', 'ipad', 'r', 'anti', '-', 'glare', 'screen', 'protector', 'col', 'category', 'val', 'printers', 'col', 'brand', 'val', 'i', '-', 'te', '##c', 'col', 'model', '##no', 'val', 'col', 'price', 'val', '[SEP]']
is_heads: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
y: 1
tags: 1
mask: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1])
seqlen: 77
task_name: Structured/Walmart-Amazon
=======================
step: 0, task: Structured/Walmart-Amazon, loss: 0.02351970598101616
step: 10, task: Structured/Walmart-Amazon, loss: 0.14527811110019684
step: 20, task: Structured/Walmart-Amazon, loss: 0.042107999324798584
Gradient overflow.  Skipping step, loss scaler 0 reducing loss scale to 8192.0
step: 30, task: Structured/Walmart-Amazon, loss: 0.27254557609558105
step: 40, task: Structured/Walmart-Amazon, loss: 0.018867135047912598
step: 50, task: Structured/Walmart-Amazon, loss: 0.06205234304070473
step: 60, task: Structured/Walmart-Amazon, loss: 0.09326091408729553
step: 70, task: Structured/Walmart-Amazon, loss: 0.038566045463085175
=========eval at epoch=8=========
Validation:
=============Structured/Walmart-Amazon==================
accuracy=0.953
precision=0.729
recall=0.793
f1=0.759
======================================
Test:
=============Structured/Walmart-Amazon==================
accuracy=0.959
precision=0.802
recall=0.756
f1=0.779
======================================
=====sanity check======
words: COL title VAL smead folders front interior pocket straight end tab letter manila 50 box COL category VAL stationery & office machinery COL brand VAL  COL modelno VAL 24117 COL price VAL 45.94  [SEP] COL title VAL new-pendaflex 16651 - pocket folders straight cut top tab letter manila 50 box - ess16651 COL category VAL laminating supplies COL brand VAL pendaflex COL modelno VAL  COL price VAL  
x: [  101  8902  2516 11748 15488 13775 19622  2015  2392  4592  4979  3442
  2203 21628  3661  9011  2753  3482  8902  4696 11748  2276  7301  1004
  2436 10394  8902  4435 11748  8902  2944  3630 11748 22343 16576  8902
  3976 11748  3429  1012  6365   102  8902  2516 11748  2047  1011  7279
  2850 21031  2595 27676  2487  1011  4979 19622  2015  3442  3013  2327
 21628  3661  9011  2753  3482  1011  9686  2015 16048 26187  2487  8902
  4696 11748 16983 19185  6067  8902  4435 11748  7279  2850 21031  2595
  8902  2944  3630 11748  8902  3976 11748   102]
tokens: ['[CLS]', 'col', 'title', 'val', 'sm', '##ead', 'folder', '##s', 'front', 'interior', 'pocket', 'straight', 'end', 'tab', 'letter', 'manila', '50', 'box', 'col', 'category', 'val', 'station', '##ery', '&', 'office', 'machinery', 'col', 'brand', 'val', 'col', 'model', '##no', 'val', '241', '##17', 'col', 'price', 'val', '45', '.', '94', '[SEP]', 'col', 'title', 'val', 'new', '-', 'pen', '##da', '##fle', '##x', '1665', '##1', '-', 'pocket', 'folder', '##s', 'straight', 'cut', 'top', 'tab', 'letter', 'manila', '50', 'box', '-', 'es', '##s', '##16', '##65', '##1', 'col', 'category', 'val', 'lam', '##inating', 'supplies', 'col', 'brand', 'val', 'pen', '##da', '##fle', '##x', 'col', 'model', '##no', 'val', 'col', 'price', 'val', '[SEP]']
is_heads: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
y: 0
tags: 0
mask: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1])
seqlen: 92
task_name: Structured/Walmart-Amazon
=======================
step: 0, task: Structured/Walmart-Amazon, loss: 0.10532274097204208
step: 10, task: Structured/Walmart-Amazon, loss: 0.109108567237854
step: 20, task: Structured/Walmart-Amazon, loss: 0.04861930385231972
step: 30, task: Structured/Walmart-Amazon, loss: 0.0437847338616848
step: 40, task: Structured/Walmart-Amazon, loss: 0.027399396523833275
step: 50, task: Structured/Walmart-Amazon, loss: 0.07314451783895493
step: 60, task: Structured/Walmart-Amazon, loss: 0.06122671812772751
step: 70, task: Structured/Walmart-Amazon, loss: 0.07697101682424545
=========eval at epoch=9=========
Validation:
=============Structured/Walmart-Amazon==================
accuracy=0.965
precision=0.842
recall=0.772
f1=0.805
======================================
Test:
=============Structured/Walmart-Amazon==================
accuracy=0.964
precision=0.844
recall=0.756
f1=0.798
======================================
=====sanity check======
words: COL title VAL humminbird 778c hd color fishing system COL category VAL fishing and boating COL brand VAL humminbird COL modelno VAL 407930-1 COL price VAL 499.46  [SEP] COL title VAL humminbird 778c hd fishfinder COL category VAL fishfinders COL brand VAL humminbird COL modelno VAL 407930-1 COL price VAL  
x: [  101  8902  2516 11748 14910 10020  9001  6255  2620  2278 10751  3609
  5645  2291  8902  4696 11748  5645  1998 23639  8902  4435 11748 14910
 10020  9001  8902  2944  3630 11748 28941  2683 14142  1011  1015  8902
  3976 11748  4749  2683  1012  4805   102  8902  2516 11748 14910 10020
  9001  6255  2620  2278 10751  3869 23695  8902  4696 11748  3869 23695
  2015  8902  4435 11748 14910 10020  9001  8902  2944  3630 11748 28941
  2683 14142  1011  1015  8902  3976 11748   102]
tokens: ['[CLS]', 'col', 'title', 'val', 'hum', '##min', '##bird', '77', '##8', '##c', 'hd', 'color', 'fishing', 'system', 'col', 'category', 'val', 'fishing', 'and', 'boating', 'col', 'brand', 'val', 'hum', '##min', '##bird', 'col', 'model', '##no', 'val', '407', '##9', '##30', '-', '1', 'col', 'price', 'val', '49', '##9', '.', '46', '[SEP]', 'col', 'title', 'val', 'hum', '##min', '##bird', '77', '##8', '##c', 'hd', 'fish', '##finder', 'col', 'category', 'val', 'fish', '##finder', '##s', 'col', 'brand', 'val', 'hum', '##min', '##bird', 'col', 'model', '##no', 'val', '407', '##9', '##30', '-', '1', 'col', 'price', 'val', '[SEP]']
is_heads: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
y: 1
tags: 1
mask: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
seqlen: 80
task_name: Structured/Walmart-Amazon
=======================
step: 0, task: Structured/Walmart-Amazon, loss: 0.029562946408987045
step: 10, task: Structured/Walmart-Amazon, loss: 0.016271498054265976
step: 20, task: Structured/Walmart-Amazon, loss: 0.07844468951225281
step: 30, task: Structured/Walmart-Amazon, loss: 0.037619464099407196
step: 40, task: Structured/Walmart-Amazon, loss: 0.03608560562133789
step: 50, task: Structured/Walmart-Amazon, loss: 0.044920794665813446
step: 60, task: Structured/Walmart-Amazon, loss: 0.11076534539461136
step: 70, task: Structured/Walmart-Amazon, loss: 0.11404973268508911
=========eval at epoch=10=========
Validation:
=============Structured/Walmart-Amazon==================
accuracy=0.962
precision=0.829
recall=0.751
f1=0.788
======================================
Test:
=============Structured/Walmart-Amazon==================
accuracy=0.962
precision=0.849
recall=0.731
f1=0.786
======================================
=====sanity check======
words: COL title VAL kingston valueram 2gb ddr3 sdram desktop memory module COL category VAL memory COL brand VAL kingston COL modelno VAL kvr1333d3ls4r9s/2g COL price VAL 63.88  [SEP] COL title VAL kingston valueram 512 mb 333mhz pc2700 ddr dimm desktop memory kvr333x64c25 512 COL category VAL memory COL brand VAL kingston COL modelno VAL kvr333x64c25/512 COL price VAL 16.5 
x: [  101  8902  2516 11748  9803  3643  6444  1016 18259 20315  2099  2509
 17371  6444 15363  3638 11336  8902  4696 11748  3638  8902  4435 11748
  9803  8902  2944  3630 11748 24888  2099 17134 22394  2094  2509  4877
  2549  2099  2683  2015  1013  1016  2290  8902  3976 11748  6191  1012
  6070   102  8902  2516 11748  9803  3643  6444 24406 16914 21211  2213
  2232  2480  7473 22907  8889 20315  2099 11737  2213 15363  3638 24888
  2099 22394  2509  2595 21084  2278 17788 24406  8902  4696 11748  3638
  8902  4435 11748  9803  8902  2944  3630 11748 24888  2099 22394  2509
  2595 21084  2278 17788  1013 24406  8902  3976 11748  2385  1012  1019
   102]
tokens: ['[CLS]', 'col', 'title', 'val', 'kingston', 'value', '##ram', '2', '##gb', 'dd', '##r', '##3', 'sd', '##ram', 'desktop', 'memory', 'module', 'col', 'category', 'val', 'memory', 'col', 'brand', 'val', 'kingston', 'col', 'model', '##no', 'val', 'kv', '##r', '##13', '##33', '##d', '##3', '##ls', '##4', '##r', '##9', '##s', '/', '2', '##g', 'col', 'price', 'val', '63', '.', '88', '[SEP]', 'col', 'title', 'val', 'kingston', 'value', '##ram', '512', 'mb', '333', '##m', '##h', '##z', 'pc', '##27', '##00', 'dd', '##r', 'dim', '##m', 'desktop', 'memory', 'kv', '##r', '##33', '##3', '##x', '##64', '##c', '##25', '512', 'col', 'category', 'val', 'memory', 'col', 'brand', 'val', 'kingston', 'col', 'model', '##no', 'val', 'kv', '##r', '##33', '##3', '##x', '##64', '##c', '##25', '/', '512', 'col', 'price', 'val', '16', '.', '5', '[SEP]']
is_heads: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
y: 0
tags: 0
mask: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1])
seqlen: 109
task_name: Structured/Walmart-Amazon
=======================
step: 0, task: Structured/Walmart-Amazon, loss: 0.07919821888208389
step: 10, task: Structured/Walmart-Amazon, loss: 0.010597014799714088
step: 20, task: Structured/Walmart-Amazon, loss: 0.03264240175485611
step: 30, task: Structured/Walmart-Amazon, loss: 0.045596204698085785
step: 40, task: Structured/Walmart-Amazon, loss: 0.1413060426712036
step: 50, task: Structured/Walmart-Amazon, loss: 0.009983071126043797
step: 60, task: Structured/Walmart-Amazon, loss: 0.03705322742462158
step: 70, task: Structured/Walmart-Amazon, loss: 0.02513713389635086
=========eval at epoch=11=========
Validation:
=============Structured/Walmart-Amazon==================
accuracy=0.960
precision=0.797
recall=0.772
f1=0.784
======================================
Test:
=============Structured/Walmart-Amazon==================
accuracy=0.964
precision=0.829
recall=0.777
f1=0.802
======================================
=====sanity check======
words: COL title VAL oki 43502001 type 9 black toner cartridge COL category VAL printers COL brand VAL oki COL modelno VAL 4.3502001 e7 COL price VAL 98.0  [SEP] COL title VAL brother tn540 black toner cartridge COL category VAL laser printer toner COL brand VAL brother COL modelno VAL tn540 COL price VAL 51.49 
x: [  101  8902  2516 11748  7929  2072 24125  2692 28332  2487  2828  1023
  2304  4309  2099 15110  8902  4696 11748 23557  8902  4435 11748  7929
  2072  8902  2944  3630 11748  1018  1012  8698 28332  2487  1041  2581
  8902  3976 11748  5818  1012  1014   102  8902  2516 11748  2567 28286
 27009  2692  2304  4309  2099 15110  8902  4696 11748  9138 15041  4309
  2099  8902  4435 11748  2567  8902  2944  3630 11748 28286 27009  2692
  8902  3976 11748  4868  1012  4749   102]
tokens: ['[CLS]', 'col', 'title', 'val', 'ok', '##i', '435', '##0', '##200', '##1', 'type', '9', 'black', 'tone', '##r', 'cartridge', 'col', 'category', 'val', 'printers', 'col', 'brand', 'val', 'ok', '##i', 'col', 'model', '##no', 'val', '4', '.', '350', '##200', '##1', 'e', '##7', 'col', 'price', 'val', '98', '.', '0', '[SEP]', 'col', 'title', 'val', 'brother', 'tn', '##54', '##0', 'black', 'tone', '##r', 'cartridge', 'col', 'category', 'val', 'laser', 'printer', 'tone', '##r', 'col', 'brand', 'val', 'brother', 'col', 'model', '##no', 'val', 'tn', '##54', '##0', 'col', 'price', 'val', '51', '.', '49', '[SEP]']
is_heads: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
y: 0
tags: 0
mask: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1])
seqlen: 79
task_name: Structured/Walmart-Amazon
=======================
step: 0, task: Structured/Walmart-Amazon, loss: 0.1966801881790161
step: 10, task: Structured/Walmart-Amazon, loss: 0.011229138821363449
step: 20, task: Structured/Walmart-Amazon, loss: 0.03230530023574829
step: 30, task: Structured/Walmart-Amazon, loss: 0.34664982557296753
step: 40, task: Structured/Walmart-Amazon, loss: 0.26371318101882935
step: 50, task: Structured/Walmart-Amazon, loss: 0.10055018961429596
step: 60, task: Structured/Walmart-Amazon, loss: 0.06786730140447617
step: 70, task: Structured/Walmart-Amazon, loss: 0.019674235954880714
=========eval at epoch=12=========
Validation:
=============Structured/Walmart-Amazon==================
accuracy=0.961
precision=0.810
recall=0.772
f1=0.790
======================================
Test:
=============Structured/Walmart-Amazon==================
accuracy=0.962
precision=0.844
recall=0.731
f1=0.783
======================================
=====sanity check======
words: COL title VAL philips 10-outlet 2500j surge protector COL category VAL electronics - general COL brand VAL philips COL modelno VAL spp4101b/17 COL price VAL 0.0  [SEP] COL title VAL philips spp2217wa 6-outlet home theater surge protector black COL category VAL surge protectors COL brand VAL philips COL modelno VAL spp2217wa/17 COL price VAL  
x: [  101  8902  2516 11748 19087  2184  1011 13307 25108  3501 12058 16167
  8902  4696 11748  8139  1011  2236  8902  4435 11748 19087  8902  2944
  3630 11748 26924 23632 24096  2497  1013  2459  8902  3976 11748  1014
  1012  1014   102  8902  2516 11748 19087 26924 19317 16576  4213  1020
  1011 13307  2188  4258 12058 16167  2304  8902  4696 11748 12058 16167
  2015  8902  4435 11748 19087  8902  2944  3630 11748 26924 19317 16576
  4213  1013  2459  8902  3976 11748   102]
tokens: ['[CLS]', 'col', 'title', 'val', 'philips', '10', '-', 'outlet', '2500', '##j', 'surge', 'protector', 'col', 'category', 'val', 'electronics', '-', 'general', 'col', 'brand', 'val', 'philips', 'col', 'model', '##no', 'val', 'spp', '##41', '##01', '##b', '/', '17', 'col', 'price', 'val', '0', '.', '0', '[SEP]', 'col', 'title', 'val', 'philips', 'spp', '##22', '##17', '##wa', '6', '-', 'outlet', 'home', 'theater', 'surge', 'protector', 'black', 'col', 'category', 'val', 'surge', 'protector', '##s', 'col', 'brand', 'val', 'philips', 'col', 'model', '##no', 'val', 'spp', '##22', '##17', '##wa', '/', '17', 'col', 'price', 'val', '[SEP]']
is_heads: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
y: 0
tags: 0
mask: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
seqlen: 79
task_name: Structured/Walmart-Amazon
=======================
step: 0, task: Structured/Walmart-Amazon, loss: 0.021627875044941902
step: 10, task: Structured/Walmart-Amazon, loss: 0.2195912003517151
step: 20, task: Structured/Walmart-Amazon, loss: 0.12391126900911331
step: 30, task: Structured/Walmart-Amazon, loss: 0.0948953926563263
step: 40, task: Structured/Walmart-Amazon, loss: 0.025120994076132774
step: 50, task: Structured/Walmart-Amazon, loss: 0.005672534927725792
step: 60, task: Structured/Walmart-Amazon, loss: 0.018310852348804474
step: 70, task: Structured/Walmart-Amazon, loss: 0.060282591730356216
=========eval at epoch=13=========
Validation:
=============Structured/Walmart-Amazon==================
accuracy=0.966
precision=0.864
recall=0.756
f1=0.807
======================================
Test:
=============Structured/Walmart-Amazon==================
accuracy=0.963
precision=0.869
recall=0.720
f1=0.788
======================================
=====sanity check======
words: COL title VAL zax 87303 pro series 3m composite audio video cable COL category VAL tv accessories COL brand VAL zax COL modelno VAL 87303 COL price VAL 10.88  [SEP] COL title VAL new-zax 87303 pro series composite audio video cable 3 m - 87303 COL category VAL cables interconnects COL brand VAL zax COL modelno VAL  COL price VAL 9.93 
x: [  101  8902  2516 11748 23564  2595  6584 14142  2509  4013  2186  1017
  2213 12490  5746  2678  5830  8902  4696 11748  2694 16611  8902  4435
 11748 23564  2595  8902  2944  3630 11748  6584 14142  2509  8902  3976
 11748  2184  1012  6070   102  8902  2516 11748  2047  1011 23564  2595
  6584 14142  2509  4013  2186 12490  5746  2678  5830  1017  1049  1011
  6584 14142  2509  8902  4696 11748 15196  6970  8663  2638 16649  8902
  4435 11748 23564  2595  8902  2944  3630 11748  8902  3976 11748  1023
  1012  6109   102]
tokens: ['[CLS]', 'col', 'title', 'val', 'za', '##x', '87', '##30', '##3', 'pro', 'series', '3', '##m', 'composite', 'audio', 'video', 'cable', 'col', 'category', 'val', 'tv', 'accessories', 'col', 'brand', 'val', 'za', '##x', 'col', 'model', '##no', 'val', '87', '##30', '##3', 'col', 'price', 'val', '10', '.', '88', '[SEP]', 'col', 'title', 'val', 'new', '-', 'za', '##x', '87', '##30', '##3', 'pro', 'series', 'composite', 'audio', 'video', 'cable', '3', 'm', '-', '87', '##30', '##3', 'col', 'category', 'val', 'cables', 'inter', '##con', '##ne', '##cts', 'col', 'brand', 'val', 'za', '##x', 'col', 'model', '##no', 'val', 'col', 'price', 'val', '9', '.', '93', '[SEP]']
is_heads: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
y: 1
tags: 1
mask: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
seqlen: 87
task_name: Structured/Walmart-Amazon
=======================
step: 0, task: Structured/Walmart-Amazon, loss: 0.029656285420060158
step: 10, task: Structured/Walmart-Amazon, loss: 0.14581303298473358
step: 20, task: Structured/Walmart-Amazon, loss: 0.005312720313668251
step: 30, task: Structured/Walmart-Amazon, loss: 0.218222975730896
step: 40, task: Structured/Walmart-Amazon, loss: 0.37143537402153015
step: 50, task: Structured/Walmart-Amazon, loss: 0.024184023961424828
step: 60, task: Structured/Walmart-Amazon, loss: 0.15598058700561523
step: 70, task: Structured/Walmart-Amazon, loss: 0.14010444283485413
=========eval at epoch=14=========
Validation:
=============Structured/Walmart-Amazon==================
accuracy=0.967
precision=0.889
recall=0.746
f1=0.811
======================================
Test:
=============Structured/Walmart-Amazon==================
accuracy=0.962
precision=0.887
recall=0.689
f1=0.776
======================================
=====sanity check======
words: COL title VAL targus truss case for ipad black blue COL category VAL mp3 accessories COL brand VAL targus COL modelno VAL thz06103us COL price VAL 69.88  [SEP] COL title VAL targus truss case stand for apple ipad 16gb 32gb 64gb wifi 3g ipad 2 thz06103us black blue COL category VAL cases sleeves COL brand VAL targus COL modelno VAL for ipad 1 2 COL price VAL 45.27 
x: [  101  8902  2516 11748 16985 12349 24224  2553  2005 25249  2304  2630
  8902  4696 11748 23378 16611  8902  4435 11748 16985 12349  8902  2944
  3630 11748 16215  2480  2692  2575 10790  2509  2271  8902  3976 11748
  6353  1012  6070   102  8902  2516 11748 16985 12349 24224  2553  3233
  2005  6207 25249  2385 18259  3590 18259  4185 18259 15536  8873  1017
  2290 25249  1016 16215  2480  2692  2575 10790  2509  2271  2304  2630
  8902  4696 11748  3572 15114  8902  4435 11748 16985 12349  8902  2944
  3630 11748  2005 25249  1015  1016  8902  3976 11748  3429  1012  2676
   102]
tokens: ['[CLS]', 'col', 'title', 'val', 'tar', '##gus', 'truss', 'case', 'for', 'ipad', 'black', 'blue', 'col', 'category', 'val', 'mp3', 'accessories', 'col', 'brand', 'val', 'tar', '##gus', 'col', 'model', '##no', 'val', 'th', '##z', '##0', '##6', '##10', '##3', '##us', 'col', 'price', 'val', '69', '.', '88', '[SEP]', 'col', 'title', 'val', 'tar', '##gus', 'truss', 'case', 'stand', 'for', 'apple', 'ipad', '16', '##gb', '32', '##gb', '64', '##gb', 'wi', '##fi', '3', '##g', 'ipad', '2', 'th', '##z', '##0', '##6', '##10', '##3', '##us', 'black', 'blue', 'col', 'category', 'val', 'cases', 'sleeves', 'col', 'brand', 'val', 'tar', '##gus', 'col', 'model', '##no', 'val', 'for', 'ipad', '1', '2', 'col', 'price', 'val', '45', '.', '27', '[SEP]']
is_heads: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
y: 1
tags: 1
mask: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
seqlen: 97
task_name: Structured/Walmart-Amazon
=======================
step: 0, task: Structured/Walmart-Amazon, loss: 0.05674690008163452
step: 10, task: Structured/Walmart-Amazon, loss: 0.010639473795890808
step: 20, task: Structured/Walmart-Amazon, loss: 0.014197586104273796
step: 30, task: Structured/Walmart-Amazon, loss: 0.0059217349626123905
step: 40, task: Structured/Walmart-Amazon, loss: 0.0809105634689331
step: 50, task: Structured/Walmart-Amazon, loss: 0.014607307501137257
step: 60, task: Structured/Walmart-Amazon, loss: 0.05194667726755142
step: 70, task: Structured/Walmart-Amazon, loss: 0.004937577992677689
=========eval at epoch=15=========
Validation:
=============Structured/Walmart-Amazon==================
accuracy=0.965
precision=0.877
recall=0.736
f1=0.800
======================================
Test:
=============Structured/Walmart-Amazon==================
accuracy=0.962
precision=0.892
recall=0.684
f1=0.774
======================================
=====sanity check======
words: COL title VAL tomtom one carry case COL category VAL gps COL brand VAL tomtom COL modelno VAL 9n00 .181 COL price VAL 19.96  [SEP] COL title VAL tomtom one carrying case COL category VAL cases COL brand VAL tomtom COL modelno VAL 9n00 .181 COL price VAL 4.99 
x: [  101  8902  2516 11748  3419 20389  2028  4287  2553  8902  4696 11748
 14658  8902  4435 11748  3419 20389  8902  2944  3630 11748  1023  2078
  8889  1012 18596  8902  3976 11748  2539  1012  5986   102  8902  2516
 11748  3419 20389  2028  4755  2553  8902  4696 11748  3572  8902  4435
 11748  3419 20389  8902  2944  3630 11748  1023  2078  8889  1012 18596
  8902  3976 11748  1018  1012  5585   102]
tokens: ['[CLS]', 'col', 'title', 'val', 'tom', '##tom', 'one', 'carry', 'case', 'col', 'category', 'val', 'gps', 'col', 'brand', 'val', 'tom', '##tom', 'col', 'model', '##no', 'val', '9', '##n', '##00', '.', '181', 'col', 'price', 'val', '19', '.', '96', '[SEP]', 'col', 'title', 'val', 'tom', '##tom', 'one', 'carrying', 'case', 'col', 'category', 'val', 'cases', 'col', 'brand', 'val', 'tom', '##tom', 'col', 'model', '##no', 'val', '9', '##n', '##00', '.', '181', 'col', 'price', 'val', '4', '.', '99', '[SEP]']
is_heads: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
y: 1
tags: 1
mask: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
seqlen: 67
task_name: Structured/Walmart-Amazon
=======================
step: 0, task: Structured/Walmart-Amazon, loss: 0.018213029950857162
step: 10, task: Structured/Walmart-Amazon, loss: 0.22811956703662872
step: 20, task: Structured/Walmart-Amazon, loss: 0.004716572817414999
step: 30, task: Structured/Walmart-Amazon, loss: 0.16150718927383423
step: 40, task: Structured/Walmart-Amazon, loss: 0.031170422211289406
step: 50, task: Structured/Walmart-Amazon, loss: 0.0032833400182425976
step: 60, task: Structured/Walmart-Amazon, loss: 0.07380940020084381
step: 70, task: Structured/Walmart-Amazon, loss: 0.023644817993044853
=========eval at epoch=16=========
Validation:
=============Structured/Walmart-Amazon==================
accuracy=0.963
precision=0.831
recall=0.767
f1=0.798
======================================
Test:
=============Structured/Walmart-Amazon==================
accuracy=0.964
precision=0.857
recall=0.746
f1=0.798
======================================
=====sanity check======
words: COL title VAL crown cushion-step rubber mat 36 x 72 marbleized black COL category VAL home care COL brand VAL crown COL modelno VAL cu3672bk COL price VAL 194.97  [SEP] COL title VAL new-crown cu3660gy - cushion-step mat rubber 36 x 60 marbleized gray - cwncu3660gy COL category VAL laminating supplies COL brand VAL crown COL modelno VAL  COL price VAL 216.0 
x: [  101  8902  2516 11748  4410 22936  1011  3357  8903 13523  4029  1060
  5824  7720  3550  2304  8902  4696 11748  2188  2729  8902  4435 11748
  4410  8902  2944  3630 11748 12731 21619  2581  2475  2497  2243  8902
  3976 11748 19955  1012  5989   102  8902  2516 11748  2047  1011  4410
 12731 21619 16086  6292  1011 22936  1011  3357 13523  8903  4029  1060
  3438  7720  3550  3897  1011 19296 12273  2226 21619 16086  6292  8902
  4696 11748 16983 19185  6067  8902  4435 11748  4410  8902  2944  3630
 11748  8902  3976 11748 20294  1012  1014   102]
tokens: ['[CLS]', 'col', 'title', 'val', 'crown', 'cushion', '-', 'step', 'rubber', 'mat', '36', 'x', '72', 'marble', '##ized', 'black', 'col', 'category', 'val', 'home', 'care', 'col', 'brand', 'val', 'crown', 'col', 'model', '##no', 'val', 'cu', '##36', '##7', '##2', '##b', '##k', 'col', 'price', 'val', '194', '.', '97', '[SEP]', 'col', 'title', 'val', 'new', '-', 'crown', 'cu', '##36', '##60', '##gy', '-', 'cushion', '-', 'step', 'mat', 'rubber', '36', 'x', '60', 'marble', '##ized', 'gray', '-', 'cw', '##nc', '##u', '##36', '##60', '##gy', 'col', 'category', 'val', 'lam', '##inating', 'supplies', 'col', 'brand', 'val', 'crown', 'col', 'model', '##no', 'val', 'col', 'price', 'val', '216', '.', '0', '[SEP]']
is_heads: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
y: 0
tags: 0
mask: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
seqlen: 92
task_name: Structured/Walmart-Amazon
=======================
step: 0, task: Structured/Walmart-Amazon, loss: 0.004934508819133043
step: 10, task: Structured/Walmart-Amazon, loss: 0.1174231544137001
step: 20, task: Structured/Walmart-Amazon, loss: 0.002733160275965929
step: 30, task: Structured/Walmart-Amazon, loss: 0.012863334268331528
step: 40, task: Structured/Walmart-Amazon, loss: 0.018574494868516922
step: 50, task: Structured/Walmart-Amazon, loss: 0.006011651363223791
step: 60, task: Structured/Walmart-Amazon, loss: 0.003358927322551608
step: 70, task: Structured/Walmart-Amazon, loss: 0.002125093713402748
=========eval at epoch=17=========
Validation:
=============Structured/Walmart-Amazon==================
accuracy=0.964
precision=0.848
recall=0.751
f1=0.797
======================================
Test:
=============Structured/Walmart-Amazon==================
accuracy=0.964
precision=0.880
recall=0.720
f1=0.792
======================================
=====sanity check======
words: COL title VAL da-lite high contrast matte white model b manual screen - 60 x 60 av format COL category VAL electronics - general COL brand VAL da-lite COL modelno VAL 93154 COL price VAL 92.99  [SEP] COL title VAL da-lite deluxe model b - projection screen - 72 in - 4 3 - high contrast matte white COL category VAL projection screens COL brand VAL da-lite COL modelno VAL  COL price VAL  
x: [  101  8902  2516 11748  4830  1011  5507  2063  2152  5688  4717  2063
  2317  2944  1038  6410  3898  1011  3438  1060  3438 20704  4289  8902
  4696 11748  8139  1011  2236  8902  4435 11748  4830  1011  5507  2063
  8902  2944  3630 11748  6109 16068  2549  8902  3976 11748  6227  1012
  5585   102  8902  2516 11748  4830  1011  5507  2063 15203  2944  1038
  1011 13996  3898  1011  5824  1999  1011  1018  1017  1011  2152  5688
  4717  2063  2317  8902  4696 11748 13996 12117  8902  4435 11748  4830
  1011  5507  2063  8902  2944  3630 11748  8902  3976 11748   102]
tokens: ['[CLS]', 'col', 'title', 'val', 'da', '-', 'lit', '##e', 'high', 'contrast', 'matt', '##e', 'white', 'model', 'b', 'manual', 'screen', '-', '60', 'x', '60', 'av', 'format', 'col', 'category', 'val', 'electronics', '-', 'general', 'col', 'brand', 'val', 'da', '-', 'lit', '##e', 'col', 'model', '##no', 'val', '93', '##15', '##4', 'col', 'price', 'val', '92', '.', '99', '[SEP]', 'col', 'title', 'val', 'da', '-', 'lit', '##e', 'deluxe', 'model', 'b', '-', 'projection', 'screen', '-', '72', 'in', '-', '4', '3', '-', 'high', 'contrast', 'matt', '##e', 'white', 'col', 'category', 'val', 'projection', 'screens', 'col', 'brand', 'val', 'da', '-', 'lit', '##e', 'col', 'model', '##no', 'val', 'col', 'price', 'val', '[SEP]']
is_heads: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
y: 0
tags: 0
mask: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
seqlen: 95
task_name: Structured/Walmart-Amazon
=======================
step: 0, task: Structured/Walmart-Amazon, loss: 0.008563948795199394
step: 10, task: Structured/Walmart-Amazon, loss: 0.0037504450883716345
step: 20, task: Structured/Walmart-Amazon, loss: 0.0024524901527911425
step: 30, task: Structured/Walmart-Amazon, loss: 0.04059002548456192
step: 40, task: Structured/Walmart-Amazon, loss: 0.004143751226365566
step: 50, task: Structured/Walmart-Amazon, loss: 0.17006157338619232
step: 60, task: Structured/Walmart-Amazon, loss: 0.009900940582156181
step: 70, task: Structured/Walmart-Amazon, loss: 0.0017216058913618326
=========eval at epoch=18=========
Validation:
=============Structured/Walmart-Amazon==================
accuracy=0.963
precision=0.843
recall=0.751
f1=0.795
======================================
Test:
=============Structured/Walmart-Amazon==================
accuracy=0.962
precision=0.867
recall=0.710
f1=0.781
======================================
=====sanity check======
words: COL title VAL lexmark pinnacle pro901 wireless-n all-in-one printer scanner copier fax COL category VAL printers COL brand VAL lexmark COL modelno VAL lexmark pro901 COL price VAL 199.99  [SEP] COL title VAL lexmark pinnacle pro901 all-in-one printer COL category VAL inkjet all-in-one printers COL brand VAL lexmark COL modelno VAL 90t9105 COL price VAL 143.68 
x: [  101  8902  2516 11748 17244 10665 26007  4013 21057  2487  9949  1011
  1050  2035  1011  1999  1011  2028 15041 26221  8872  3771  6904  2595
  8902  4696 11748 23557  8902  4435 11748 17244 10665  8902  2944  3630
 11748 17244 10665  4013 21057  2487  8902  3976 11748 20713  1012  5585
   102  8902  2516 11748 17244 10665 26007  4013 21057  2487  2035  1011
  1999  1011  2028 15041  8902  4696 11748 10710 15759  2035  1011  1999
  1011  2028 23557  8902  4435 11748 17244 10665  8902  2944  3630 11748
  3938  2102  2683 10790  2629  8902  3976 11748 16065  1012  6273   102]
tokens: ['[CLS]', 'col', 'title', 'val', 'lex', '##mark', 'pinnacle', 'pro', '##90', '##1', 'wireless', '-', 'n', 'all', '-', 'in', '-', 'one', 'printer', 'scanner', 'cop', '##ier', 'fa', '##x', 'col', 'category', 'val', 'printers', 'col', 'brand', 'val', 'lex', '##mark', 'col', 'model', '##no', 'val', 'lex', '##mark', 'pro', '##90', '##1', 'col', 'price', 'val', '199', '.', '99', '[SEP]', 'col', 'title', 'val', 'lex', '##mark', 'pinnacle', 'pro', '##90', '##1', 'all', '-', 'in', '-', 'one', 'printer', 'col', 'category', 'val', 'ink', '##jet', 'all', '-', 'in', '-', 'one', 'printers', 'col', 'brand', 'val', 'lex', '##mark', 'col', 'model', '##no', 'val', '90', '##t', '##9', '##10', '##5', 'col', 'price', 'val', '143', '.', '68', '[SEP]']
is_heads: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
y: 1
tags: 1
mask: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
seqlen: 96
task_name: Structured/Walmart-Amazon
=======================
step: 0, task: Structured/Walmart-Amazon, loss: 0.007207425311207771
step: 10, task: Structured/Walmart-Amazon, loss: 0.23030957579612732
step: 20, task: Structured/Walmart-Amazon, loss: 0.412559449672699
step: 30, task: Structured/Walmart-Amazon, loss: 0.014518513344228268
step: 40, task: Structured/Walmart-Amazon, loss: 0.0014993008226156235
step: 50, task: Structured/Walmart-Amazon, loss: 0.0287809856235981
step: 60, task: Structured/Walmart-Amazon, loss: 0.004764504265040159
step: 70, task: Structured/Walmart-Amazon, loss: 0.001761297695338726
=========eval at epoch=19=========
Validation:
=============Structured/Walmart-Amazon==================
accuracy=0.965
precision=0.858
recall=0.751
f1=0.801
======================================
Test:
=============Structured/Walmart-Amazon==================
accuracy=0.963
precision=0.859
recall=0.725
f1=0.787
======================================
=====sanity check======
words: COL title VAL sandisk 8gb microsdhc memory card COL category VAL usb drives COL brand VAL sandisk COL modelno VAL sdsdq008ga11m COL price VAL 24.88  [SEP] COL title VAL sandisk 16gb microsdhc memory card COL category VAL memory cards COL brand VAL sandisk COL modelno VAL sdsdqm-016g-b35 COL price VAL 21.91 
x: [  101  8902  2516 11748  5472 20573  1022 18259 12702 16150 16257  3638
  4003  8902  4696 11748 18833  9297  8902  4435 11748  5472 20573  8902
  2944  3630 11748 17371 16150  4160  8889  2620  3654 14526  2213  8902
  3976 11748  2484  1012  6070   102  8902  2516 11748  5472 20573  2385
 18259 12702 16150 16257  3638  4003  8902  4696 11748  3638  5329  8902
  4435 11748  5472 20573  8902  2944  3630 11748 17371 16150  4160  2213
  1011  5890  2575  2290  1011  1038 19481  8902  3976 11748  2538  1012
  6205   102]
tokens: ['[CLS]', 'col', 'title', 'val', 'sand', '##isk', '8', '##gb', 'micro', '##sd', '##hc', 'memory', 'card', 'col', 'category', 'val', 'usb', 'drives', 'col', 'brand', 'val', 'sand', '##isk', 'col', 'model', '##no', 'val', 'sd', '##sd', '##q', '##00', '##8', '##ga', '##11', '##m', 'col', 'price', 'val', '24', '.', '88', '[SEP]', 'col', 'title', 'val', 'sand', '##isk', '16', '##gb', 'micro', '##sd', '##hc', 'memory', 'card', 'col', 'category', 'val', 'memory', 'cards', 'col', 'brand', 'val', 'sand', '##isk', 'col', 'model', '##no', 'val', 'sd', '##sd', '##q', '##m', '-', '01', '##6', '##g', '-', 'b', '##35', 'col', 'price', 'val', '21', '.', '91', '[SEP]']
is_heads: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
y: 0
tags: 0
mask: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
seqlen: 86
task_name: Structured/Walmart-Amazon
=======================
step: 0, task: Structured/Walmart-Amazon, loss: 0.0440717488527298
step: 10, task: Structured/Walmart-Amazon, loss: 0.02080080471932888
step: 20, task: Structured/Walmart-Amazon, loss: 0.001988646574318409
step: 30, task: Structured/Walmart-Amazon, loss: 0.008409487083554268
step: 40, task: Structured/Walmart-Amazon, loss: 0.01619415357708931
step: 50, task: Structured/Walmart-Amazon, loss: 0.06143224611878395
step: 60, task: Structured/Walmart-Amazon, loss: 0.010192968882620335
step: 70, task: Structured/Walmart-Amazon, loss: 0.0029046291019767523
=========eval at epoch=20=========
Validation:
=============Structured/Walmart-Amazon==================
accuracy=0.966
precision=0.897
recall=0.725
f1=0.802
======================================
Test:
=============Structured/Walmart-Amazon==================
accuracy=0.961
precision=0.874
recall=0.684
f1=0.767
======================================